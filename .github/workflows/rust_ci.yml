name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  cross_compile:
    name: Cross Compile
    needs: build_and_test
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: Install cross
        run: cargo install cross
      - name: Cross compile
        run: cross build --release --target ${{ matrix.target }}
      - name: Rename binary
        run: |
          mv target/${{ matrix.target }}/release/file_concatenator \
             file_concatenator-${{ github.ref_name }}-${{ matrix.target }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./file_concatenator-${{ github.ref_name }}-${{ matrix.target }}
          asset_name: file_concatenator-${{ github.ref_name }}-${{ matrix.target }}
          asset_content_type: application/octet-stream
